name: Generate App Store Screenshots

on:
  workflow_dispatch:
    inputs:
      languages:
        description: 'Languages to generate (comma-separated, e.g., en-US,es-ES)'
        required: false
        default: 'en-US'
      devices:
        description: 'Generate for specific devices only'
        required: false
        type: choice
        options:
          - all
          - iphone
          - ipad
        default: 'all'

env:
  XCODE_VERSION: "15.0"

jobs:
  screenshots:
    name: Generate Screenshots
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode_${{ env.XCODE_VERSION }}.app
        
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
          
      - name: Install dependencies
        run: |
          gem install fastlane
          gem install fastlane-plugin-badge
          brew install imagemagick
          
      - name: Cache Swift Package Manager
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData
            .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-
            
      - name: Prepare screenshot tests
        run: |
          # Create UI test scheme if needed
          xcodebuild -list -project LeavnSuperOfficial.xcodeproj
          
      - name: Generate screenshots
        env:
          LANGUAGES: ${{ github.event.inputs.languages }}
          DEVICES: ${{ github.event.inputs.devices }}
        run: |
          # Configure devices based on input
          if [ "$DEVICES" = "iphone" ]; then
            export FASTLANE_DEVICES="iPhone 15 Pro Max,iPhone 15,iPhone 8 Plus"
          elif [ "$DEVICES" = "ipad" ]; then
            export FASTLANE_DEVICES="iPad Pro (12.9-inch) (6th generation),iPad Pro (11-inch) (4th generation)"
          else
            export FASTLANE_DEVICES="iPhone 15 Pro Max,iPhone 15,iPhone 8 Plus,iPad Pro (12.9-inch) (6th generation),iPad Pro (11-inch) (4th generation)"
          fi
          
          # Generate screenshots
          fastlane screenshots
          
      - name: Frame screenshots
        run: |
          # Install frameit if not already installed
          gem install fastlane-plugin-frameit
          
          # Frame the screenshots
          fastlane run frameit path:"./screenshots" use_platform:"IOS"
          
      - name: Optimize screenshots
        run: |
          # Optimize PNG files
          find ./screenshots -name "*.png" -exec pngquant --quality=85-95 --skip-if-larger --strip --output {} --force {} \;
          
      - name: Generate preview
        run: |
          # Create a preview montage of screenshots
          devices=("iPhone-15-Pro-Max" "iPad-Pro-12.9")
          
          for device in "${devices[@]}"; do
            montage ./screenshots/en-US/${device}*.png \
              -tile 3x2 -geometry 300x600+10+10 \
              -background white -shadow \
              ./screenshots/preview-${device}.jpg
          done
          
      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        with:
          name: app-store-screenshots
          path: |
            ./screenshots/
            !./screenshots/**/*.strings
            
      - name: Create PR with screenshots
        if: github.event_name == 'workflow_dispatch'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update App Store screenshots"
          title: "Update App Store screenshots"
          body: |
            ## Screenshot Update
            
            This PR updates the App Store screenshots for the following:
            - Languages: ${{ github.event.inputs.languages }}
            - Devices: ${{ github.event.inputs.devices }}
            
            Please review the screenshots before merging.
            
            ### Preview
            See the uploaded artifacts for full screenshots.
          branch: update-screenshots-${{ github.run_number }}
          delete-branch: true