name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  DEVELOPER_DIR: /Applications/Xcode_15.4.app/Contents/Developer

jobs:
  test-swift-packages:
    name: Test Swift Packages
    runs-on: macos-14
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_15.4.app
    
    - name: Test LeavnCore
      run: |
        cd Core/LeavnCore
        swift test --parallel
    
    - name: Test LeavnModules
      run: |
        cd Core/LeavnModules
        swift test --parallel

  test-ios:
    name: Test iOS
    runs-on: macos-14
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_15.4.app
    
    - name: Install dependencies
      run: |
        brew install xcbeautify
        gem install xcpretty
    
    - name: Build and Test iOS
      run: |
        set -o pipefail
        xcodebuild test \
          -scheme "Leavn-iOS" \
          -destination "platform=iOS Simulator,name=iPhone 15 Pro,OS=17.5" \
          -resultBundlePath TestResults/iOS.xcresult \
          | xcbeautify
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-test-results
        path: TestResults/iOS.xcresult

  test-macos:
    name: Test macOS
    runs-on: macos-14
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_15.4.app
    
    - name: Install dependencies
      run: |
        brew install xcbeautify
        gem install xcpretty
    
    - name: Build and Test macOS
      run: |
        set -o pipefail
        xcodebuild test \
          -scheme "Leavn-macOS" \
          -destination "platform=macOS" \
          -resultBundlePath TestResults/macOS.xcresult \
          | xcbeautify
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: macos-test-results
        path: TestResults/macOS.xcresult

  ui-tests:
    name: UI Tests
    runs-on: macos-14
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_15.4.app
    
    - name: Install dependencies
      run: |
        brew install xcbeautify
    
    - name: Run UI Tests
      run: |
        set -o pipefail
        xcodebuild test \
          -scheme "Leavn-iOS" \
          -destination "platform=iOS Simulator,name=iPhone 15 Pro,OS=17.5" \
          -testPlan "UITests" \
          -resultBundlePath TestResults/UITests.xcresult \
          | xcbeautify
    
    - name: Upload UI test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ui-test-results
        path: TestResults/UITests.xcresult

  coverage:
    name: Code Coverage
    runs-on: macos-14
    needs: [test-swift-packages, test-ios, test-macos]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download test results
      uses: actions/download-artifact@v4
      with:
        path: TestResults
    
    - name: Generate coverage report
      run: |
        xcrun xcresultparser codecov TestResults/**/*.xcresult > coverage.json
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.json
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}